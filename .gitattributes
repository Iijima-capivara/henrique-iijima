from src.model.contact    import Contact
from datetime             import date, datetime

class Contact:
    def __init__(self):
        self._id = None
        self._name = None
        self._login = None
        self._adresses = [Adress]
        self._phones = [Phone]
        self._emails = [Email]
        self._sites = [Site]
        self._createdAt = None
        self._updatedAt = None

    def get_id(self):
        return self._id

    def set_id(self, value: int):
        self._id = value

    def get_name(self):
        return self._name

    def set_name(self, value: str):
        self._name = value

    def get_login(self):
        return self._login

    def set_login(self, value: str):
        self._login = value

    def set_updatedAt(self, value: datetime):
        self._updatedAt = value

    def get_adresses(self):
        return self._adresses

    def set_adresses(self, value: list):
        self._adresses = value

    def get_phones(self):
        return self._phones

    def set_phones(self, value: list):
        self._phones = value

    def get_emails(self):
        return self._emails

    def set_emails(self, value: list):
        self._emails = value

    def get_sites(self):
        return self._sites

    def set_sites(self, value: list):
        self._sites = value

    def get_createdAt(self):
        return self._createdAt

    def set_createdAt(self, value: datetime):
        self._createdAt = value

    def get_updatedAt(self):
        return self._updatedAt

    def __hash__(self):
        return hash((self._id, self._name, self._login,))

    def __eq__(self, other):
        if not isinstance(other, contact):
            return False
        return (self._id == other.get_id() and
                self._name == other.get_name() and
                self._login == other.get_login())

    def __str__(self):
        return (f"User(id={self._id}, name={self._name}, login={self._login}, "
                f"createdAt={self._createdAt}, updatedAt={self._updatedAt})")

    @classmethod
    def builder(cls):
        return cls.ContactBuilder()


class ContactBuilder:
    def __init__(self):
        self._user = contact()

    def id(self, value: int):
        self._user.set_id(value)
        return self

    def name(self, value: str):
        self._user.set_name(value)
        return self
